package org.ng.undp.vdms.views;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFHeader;
import org.apache.poi.hssf.util.HSSFColor;
import org.apache.poi.ss.usermodel.*;
import org.apache.poi.ss.util.CellRangeAddress;
import org.ng.undp.vdms.dao.Accessor;
import org.ng.undp.vdms.dao.Filter;
import org.ng.undp.vdms.domains.User;
import org.ng.undp.vdms.utils.DateUtils;
import org.springframework.web.servlet.view.document.AbstractXlsView;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Map;

/**
 * Created by macbook on 7/7/17.
 */
public class ExcelViewUsers extends AbstractXlsView {

    @SuppressWarnings("unchecked")
    @Override
    protected void buildExcelDocument(Map<String, Object> model,
                                      Workbook workbook,
                                      HttpServletRequest request,
                                      HttpServletResponse response) throws Exception {

        SimpleDateFormat simpleDateFormat = new SimpleDateFormat("dd - MM - yyyy hh:mm:ss a");

        // change the file name
        response.setHeader("Content-Disposition", "attachment; filename=\"vdms-users-file.xls\"");
        List<User> users = null;

        if (model == null) {
            users = Accessor.findList(User.class, Filter.get().field("deleted_at").isNull());
        } else {
            users = Accessor.findList(User.class, Filter.get().field("deleted_at").isNull());
        }

        // create excel xls sheet
        Sheet sheet = workbook.createSheet("User Detail");
        sheet.setDefaultColumnWidth(30);

        // create style for header cells
        CellStyle style = workbook.createCellStyle();
        Font font = workbook.createFont();
        font.setFontName("Arial");

        //20 * 12 for 14px
        font.setFontHeight((short) (20 * 12));

        style.setFillForegroundColor(HSSFColor.WHITE.index);
        //style.setFillPattern(FillPatternType.SOLID_FOREGROUND);
        //font.setBold(true);
        font.setColor(HSSFColor.BLACK.index);
        style.setFont(font);


        CellStyle style1 = workbook.createCellStyle();
        Font font1 = workbook.createFont();
        font1.setFontName("Arial");


        style1.setFillForegroundColor(HSSFColor.GREEN.index);
        style1.setFillPattern(FillPatternType.SOLID_FOREGROUND);
        font1.setBold(true);
        font1.setColor(HSSFColor.WHITE.index);

        //20 * 14 for 14px
        font1.setFontHeight((short) (20 * 14));
        style1.setFont(font1);
        style1.setLocked(true);

        // create header row
        Row header = sheet.createRow(0);
        header.createCell(0).setCellValue("Firstname");
        header.getCell(0).setCellStyle(style1);
        header.createCell(1).setCellValue("LastName");
        header.getCell(1).setCellStyle(style1);
        header.createCell(2).setCellValue("Email");
        header.getCell(2).setCellStyle(style1);
        header.createCell(3).setCellValue("Gender");
        header.getCell(3).setCellStyle(style1);
        header.createCell(4).setCellValue("Roles");
        header.getCell(4).setCellStyle(style1);
        header.setHeight((short) 600);


        //header.setRowStyle(style1);


        int rowCount = 1;
        int lastRow = 0;

        for (User user : users) {
            Row userRow = sheet.createRow(rowCount++);
            userRow.createCell(0).setCellValue(user.getFirstname());
            userRow.getCell(0).setCellStyle(style);
            userRow.createCell(1).setCellValue(user.getLastname());
            userRow.getCell(1).setCellStyle(style);

            userRow.createCell(2).setCellValue(user.getEmail());
            userRow.getCell(2).setCellStyle(style);

            userRow.createCell(3).setCellValue(user.getGender());
            userRow.getCell(3).setCellStyle(style);

            userRow.setHeight((short) 300);
            userRow.createCell(4).setCellValue(user.getRoleNames().toString());
            userRow.getCell(4).setCellStyle(style);
            lastRow =  rowCount;



        }


        CellStyle editableStyle = workbook.createCellStyle();
        editableStyle.setLocked(true);
        editableStyle.setWrapText(true);
        editableStyle.setShrinkToFit(true);

        Row userRow = sheet.createRow(lastRow + 1);
      Cell c =   userRow.createCell(0);
                c.setCellStyle(style1);

                c.setCellValue("Generated By VDMS -   "+ simpleDateFormat.format(new Date()));
                userRow.createCell(1).setCellStyle(style1);
   userRow.createCell(2).setCellStyle(style1);
   userRow.createCell(3).setCellStyle(style1);
   userRow.createCell(4).setCellStyle(style1);

        userRow.setHeight((short) 400);

        //firstrow , lastrow ,firstcol, lastcol for merge

        sheet.addMergedRegion(new CellRangeAddress(lastRow,lastRow,0,4));








    }
}
